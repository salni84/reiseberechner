@import "stylesheets/sdx/mixins/typography";
@import "stylesheets/sdx/mixins/misc";
@import "stylesheets/sdx/variables/colors";
@import "stylesheets/sdx/variables/global";
@import "stylesheets/sdx/variables/sizes";
@import "stylesheets/sdx/utilities/screenreaders";
@import "stylesheets/sdx/icons";

:host {
  display: inline-block;
  outline: none;
  width: auto;
  min-width: $button-min-width;
}

// Styling via hostData because the button width
// is being determined by the width of sdx-button,
// its content takes in all available space.
// Only the width. Everything else is being styled
// below with the classes on the <button> or <a> resp.
:host(.transparent) {
  min-width: 0;
}

// Normal Button
// --------------------------------------------------
.button {
  // text dimensions and formatting
  @include font-sans;
  @include font-light;
  @include typo-body-1;
  overflow: hidden;
  white-space: nowrap;
  vertical-align: middle;
  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;

  // button dimensions and measurements
  display: inline-block;
  position: relative;
  width: 100%; // let sdx-button decide about its width and button (see :host above), fill all of it
  height: $button-height;
  margin: 0; // normalize Safari
  padding: ($button-padding-vertical - $button-border-width) ($button-padding-horizontal - $button-border-width);
  border: $button-border-width solid $color-button-primary;
  border-radius: $button-border-radius;
  background: none;

  // interaction behaviour and animations
  outline: none;
  cursor: pointer;
  user-select: none;
  transition: all 70ms $button-easing;
  transform-origin: 50% 50%;

  &:active {
    transform: scale(.98);
  }

  &.disabled,
  &:disabled {
    @include disabled;
  }

  .icon {
    margin-right: $baseline;
    font-size: 18px;
  }
}

// Button themes
// --------------------------------------------------
.primary {
  border-color: $color-button-primary;
  background-color: $color-button-primary;
  color: $color-white;

  &:hover {
    border-color: $color-button-primary--active;
    background-color: $color-button-primary--active;
  }

  // undo :hover style on touch devices; IE11 doesn't support the hover mediaquery ergo this workaround
  @media (hover: none) {
    border-color: $color-button-primary;
    background-color: $color-button-primary;
  }

  &:focus,
  &:active {
    border-color: $color-button-primary--active;
    background-color: $color-button-primary--active;
  }

  &.disabled,
  &:disabled {
    border-color: transparent;
    background-color: rgba($color-button-primary, .4);
    color: rgba($color-white, .6);
  }
}

.secondary {
  border-color: $color-button-secondary;
  background-color: $color-button-secondary;
  color: $color-gray;

  &:hover {
    border-color: $color-button-secondary--active;
    background-color: $color-button-secondary--active;
  }

  // undo :hover style on touch devices; IE11 doesn't support the hover mediaquery ergo this workaround
  @media (hover: none) {
    border-color: $color-button-secondary;
    background-color: $color-button-secondary;
  }

  &:focus,
  &:active {
    border-color: $color-button-secondary--active;
    background-color: $color-button-secondary--active;
  }

  &.disabled,
  &:disabled {
    border-color: transparent;
    background-color: rgba($color-button-secondary, .4);
    color: rgba($color-gray, .4);
  }
}

.confirm {
  border-color: $color-button-confirm;
  background-color: $color-button-confirm;
  color: $color-white;

  &:hover {
    border-color: $color-button-confirm--active;
    background-color: $color-button-confirm--active;
  }

  // undo :hover style on touch devices; IE11 doesn't support the hover mediaquery ergo this workaround
  @media (hover: none) {
    border-color: $color-button-confirm;
    background-color: $color-button-confirm;
  }

  &:focus,
  &:active {
    border-color: $color-button-confirm--active;
    background-color: $color-button-confirm--active;
  }

  &.disabled,
  &:disabled {
    border-color: transparent;
    background-color: rgba($color-button-confirm, .4);
  }
}

.primary,
.secondary,
.confirm {
  // used on colored backgrounds
  &.colorless {
    border-color: $color-white;
    background-color: transparent;
    color: $color-white;

    &:hover {
      border-color: $color-white;
      background-color: rgba($color-white, .15);
    }

    // undo :hover style on touch devices; IE11 doesn't support the hover mediaquery ergo this workaround
    @media (hover: none) {
      border-color: $color-white;
      background-color: transparent;
    }

    &:focus,
    &:active {
      border-color: $color-white;
      background-color: rgba($color-white, .15);
    }

    &.disabled,
    &:disabled {
      border-color: rgba($color-white, .4);
      background-color: transparent;
      color: rgba($color-white, .4);
    }
  }
}

// Transparent Button
// --------------------------------------------------
// also, see :host(.transparent) above
.transparent {
  // font
  @include font-sans;
  @include font-light;
  line-height: inherit;
  letter-spacing: inherit;
  font-size: inherit;
  text-decoration: none;

  // button dimensions and measurements
  padding: 0;
  margin: 0; // normalize Safari
  border: none; // normalize Safari

  // interaction behaviour and animations
  outline: none;
  cursor: pointer;
  user-select: none;
  transition: all 70ms $button-easing;

  background-color: transparent;
  color: $color-int-blue;

  &.invalid {
    color: $color-input-invalid-form;
  }

  &:hover {
    color: $color-int-blue--active;

    &.invalid {
      color: $color-input-invalid-form-hover;
    }
  }

  // undo :hover style on touch devices; IE11 doesn't support the hover mediaquery ergo this workaround
  @media (hover: none) {
    color: $color-int-blue;

    &.invalid {
      color: $color-input-invalid-form;
    }
  }

  &:focus,
  &:active {
    color: $color-int-blue--active;

    &.invalid {
      color: $color-input-invalid-form-hover;
    }
  }

  &.disabled, &.disabled.invalid,
  &:disabled, &:disabled.invalid {
    @include disabled;
    color: rgba($color-gray, .4);
  }

  // used on colored backgrounds
  // no extra styling for .invalid
  &.colorless, &.colorless.invalid {
    color: $color-white;

    &:hover {
      color: rgba($color-white, .8);
    }

    // undo :hover style on touch devices; IE11 doesn't support the hover mediaquery ergo this workaround
    @media (hover: none) {
      border-bottom: none;
      color: $color-white;
    }

    &:focus,
    &:active {
      color: rgba($color-white, .8);
    }
  }
}
