:host, *, *:before, *:after {
  box-sizing: border-box;
}

label {
  display: block;
  margin-bottom: 4px;
  cursor: text;
  color: #666;
  font-size: 16px;
}

:host {
  outline: none;
}

.component {
  position: relative;
}
.component .wrapper .header-wrapper {
  overflow: hidden;
  background: #fff;
  color: #333;
  border-radius: 5px;
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
}
.component .wrapper .header-wrapper .header {
  position: relative;
}
.component .wrapper .header-wrapper .header .selection, .component .wrapper .header-wrapper .header .thumb {
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
}
.component .wrapper .header-wrapper .header .thumb {
  width: 34px;
  position: absolute;
  right: -1px;
  top: -1px;
  bottom: -1px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.component .wrapper .header-wrapper .header .thumb > .icon {
  position: relative;
  width: 100%;
  transform: scale(0.5);
  transform-origin: 50% 50%;
}
.component .wrapper .header-wrapper .header .thumb > .icon::before, .component .wrapper .header-wrapper .header .thumb > .icon::after {
  position: absolute;
  top: 50%;
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 3px;
  background: #1781e3;
  width: 20px;
  height: 3px;
  backface-visibility: hidden;
  content: "";
}
.component .wrapper .header-wrapper .header .thumb > .icon::before {
  left: 0;
}
.component .wrapper .header-wrapper .header .thumb > .icon::after {
  left: 15px;
}
.component .wrapper .header-wrapper .header .thumb > .icon::before {
  transform: rotate(35deg);
}
.component .wrapper .header-wrapper .header .thumb > .icon::after {
  transform: rotate(-35deg);
}
.component .wrapper .list-container {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  background: #fff;
  position: absolute;
  left: 0;
  right: 0;
  z-index: 999999;
  box-shadow: 0 0 4px 0 rgba(51, 51, 51, 0.1), inset 0 0 0 1px #d6d6d6;
  max-height: 0;
  backface-visibility: hidden;
  outline: none;
}
.component .wrapper .list-container .list {
  overflow: hidden;
}
.component .wrapper .list-container .list .no-matches-found {
  height: 48px;
  display: flex;
  align-items: center;
  padding: 0 16px;
  color: #bbb;
}

.component.open .wrapper .header-wrapper, .component.opening .wrapper .header-wrapper {
  box-shadow: 0 0 4px 0 rgba(51, 51, 51, 0.1);
}
.component.open .wrapper .header-wrapper .header .thumb > .icon::before, .component.opening .wrapper .header-wrapper .header .thumb > .icon::before {
  transform: rotate(-35deg);
}
.component.open .wrapper .header-wrapper .header .thumb > .icon::after, .component.opening .wrapper .header-wrapper .header .thumb > .icon::after {
  transform: rotate(35deg);
}

.component.open.top .wrapper .header-wrapper, .component.opening.top .wrapper .header-wrapper {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.component.open.top .wrapper .list-container, .component.open.top .wrapper .list-container .list, .component.opening.top .wrapper .list-container, .component.opening.top .wrapper .list-container .list {
  border-radius: 5px 5px 0 0;
}

.component.open.bottom .wrapper .header-wrapper, .component.opening.bottom .wrapper .header-wrapper {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.component.open.bottom .wrapper .list-container, .component.open.bottom .wrapper .list-container .list, .component.opening.bottom .wrapper .list-container, .component.opening.bottom .wrapper .list-container .list {
  border-radius: 0 0 5px 5px;
}

.component.closing.top .header-wrapper {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.component.closing.top .wrapper .list-container, .component.closing.top .wrapper .list-container .list {
  border-radius: 5px 5px 0 0;
}

.component.closing.bottom .header-wrapper {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.component.closing.bottom .wrapper .list-container, .component.closing.bottom .wrapper .list-container .list {
  border-radius: 0 0 5px 5px;
}

.component.disabled .label, .component.disabled .wrapper, .component.loading .label, .component.loading .wrapper {
  pointer-events: none;
}

.component.disabled {
  cursor: not-allowed;
}
.component.disabled .label, .component.disabled .wrapper .header-wrapper .header .thumb {
  opacity: 0.4;
}

.component:not(.disabled):not(.loading) .header-wrapper .header {
  cursor: pointer;
}

.component:not(.disabled):not(.loading):not(.autocomplete) .header-wrapper .header:hover .thumb > .icon {
  position: relative;
}
.component:not(.disabled):not(.loading):not(.autocomplete) .header-wrapper .header:hover .thumb > .icon::before, .component:not(.disabled):not(.loading):not(.autocomplete) .header-wrapper .header:hover .thumb > .icon::after {
  position: absolute;
  top: 50%;
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 3px;
  background: #0851da;
  width: 20px;
  height: 3px;
  backface-visibility: hidden;
  content: "";
}
.component:not(.disabled):not(.loading):not(.autocomplete) .header-wrapper .header:hover .thumb > .icon::before {
  left: 0;
}
.component:not(.disabled):not(.loading):not(.autocomplete) .header-wrapper .header:hover .thumb > .icon::after {
  left: 15px;
}

.component.focus sdx-validation-message {
  display: none;
}

.component.dark .label {
  color: #fff;
}

.component.autocomplete:not(.loading) .wrapper .header-wrapper .header {
  padding-right: 0;
}

.component.invalid:not(.focus) .header-wrapper .header .thumb > .icon {
  position: relative;
}
.component.invalid:not(.focus) .header-wrapper .header .thumb > .icon::before, .component.invalid:not(.focus) .header-wrapper .header .thumb > .icon::after {
  position: absolute;
  top: 50%;
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 3px;
  background: #d12;
  width: 20px;
  height: 3px;
  backface-visibility: hidden;
  content: "";
}
.component.invalid:not(.focus) .header-wrapper .header .thumb > .icon::before {
  left: 0;
}
.component.invalid:not(.focus) .header-wrapper .header .thumb > .icon::after {
  left: 15px;
}
.component.invalid:not(.focus) .header-wrapper .header:hover .thumb > .icon {
  position: relative;
}
.component.invalid:not(.focus) .header-wrapper .header:hover .thumb > .icon::before, .component.invalid:not(.focus) .header-wrapper .header:hover .thumb > .icon::after {
  position: absolute;
  top: 50%;
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 3px;
  background: #be0000 !important;
  width: 20px;
  height: 3px;
  backface-visibility: hidden;
  content: "";
}
.component.invalid:not(.focus) .header-wrapper .header:hover .thumb > .icon::before {
  left: 0;
}
.component.invalid:not(.focus) .header-wrapper .header:hover .thumb > .icon::after {
  left: 15px;
}