/*! Built with http://stenciljs.com */
import { h } from '../webcomponents.core.js';

import { a as anime } from './chunk-16499f22.js';

class Animation {
    constructor() {
        this.animationDuration = 200;
    }
    animationNameChanged() {
        let animeParams = {
            targets: this.el,
            duration: this.animationDuration,
            easing: "cubicBezier(0.550, 0.085, 0.320, 1)",
            begin: () => {
                this.el.style.display = "inline-block";
            }
        };
        switch (this.animationName) {
            case "show":
                animeParams = Object.assign({}, animeParams, { opacity: 1, scale: 1 });
                break;
            case "hide":
                animeParams = Object.assign({}, animeParams, { opacity: 0, scale: 0, complete: () => this.el.style.display = "none" });
                break;
            default:
                break;
        }
        anime(animeParams);
    }
    componentWillLoad() {
        switch (this.animationName) {
            case "show":
                this.el.style.opacity = "1";
                this.el.style.transform = "scale(1)";
                this.el.style.display = "inline-block";
                break;
            case "hide":
                this.el.style.opacity = "0";
                this.el.style.transform = "scale(0)";
                this.el.style.display = "none";
                break;
            default:
                break;
        }
    }
    render() {
        return (h("slot", null));
    }
    static get is() { return "sdx-animation"; }
    static get encapsulation() { return "shadow"; }
    static get properties() { return {
        "animationName": {
            "type": String,
            "attr": "animation-name",
            "watchCallbacks": ["animationNameChanged"]
        },
        "el": {
            "elementRef": true
        }
    }; }
}

export { Animation as SdxAnimation };
