@charset "UTF-8";
:host, *, *:before, *:after {
  box-sizing: border-box;
}

/*doc
---
title: Screen Readers
name: 04-developers-05-screenreaders
category: Developers - Screen Reader utils
---

<p>Hide an element to all devices except screen readers with <code>.sr-only</code>.
Combine <code>.sr-only</code> with <code>.sr-only-focusable</code> to show the element again when itâ€™s focused (e.g. by a keyboard-only user).</p>

```htmlmixed_no_preview
<a class="sr-only sr-only-focusable" href="#content">Skip to main content</a>
```

<p>Can also be used as a mixin.</p>

```css_no_preview
// Usage as a mixin
.skip-navigation {
  @include sr-only;
  @include sr-only-focusable;
}
```

*/
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}

label {
  display: block;
  margin-bottom: 4px;
  cursor: text;
  color: #666;
  font-size: 16px;
}

:host {
  width: 100%;
}

.component.readonly, .component.disabled {
  opacity: 0.4;
  cursor: not-allowed;
}
.component.readonly .label, .component.readonly .wrapper, .component.disabled .label, .component.disabled .wrapper {
  pointer-events: none;
}
.component.focus:not(.readonly).invalid sdx-validation-message {
  display: none;
}
.component.focus:not(.readonly) .wrapper .input {
  border-color: #1781e3;
  color: #333;
}
.component.focus:not(.readonly) .wrapper .input::placeholder {
  opacity: 0;
}
.component.invalid .wrapper .input {
  color: #d12;
  border-color: #d12;
}
.component.invalid .wrapper .input:invalid {
  box-shadow: none;
}
.component.valid .wrapper .input, .component.date .wrapper .input {
  padding-right: 48px;
}
.component .wrapper {
  display: flex;
  position: relative;
  width: 100%;
}
.component .wrapper .input {
  border: 1px solid #bbb;
  border-radius: 5px;
  height: 48px;
  padding: 0 16px;
  line-height: 24px;
  letter-spacing: -0.1px;
  font: inherit;
  font-size: 18px;
  font-weight: 300;
  position: relative;
  outline: none;
  background-color: #fff;
  width: 100%;
  color: #333;
  user-select: text;
  backface-visibility: hidden;
  appearance: none;
  display: flex;
  align-items: center;
  caret-color: #1781e3;
}
.component .wrapper .input, .component .wrapper .input::placeholder {
  transition: 150ms all cubic-bezier(0.4, 0, 0.2, 1);
}
.component .wrapper .input::placeholder {
  opacity: 1;
  color: #bbb;
}
.component .wrapper .input[type=search] {
  -webkit-appearance: none;
}
.component .wrapper .input[type=search]::-webkit-search-cancel-button, .component .wrapper .input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}
.component .wrapper .input[type=search]::-ms-clear {
  display: none;
}
.component .wrapper .input[type=number] {
  -moz-appearance: textfield;
}
.component .wrapper .input[type=number]::-webkit-inner-spin-button, .component .wrapper .input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.component .wrapper .input.textarea {
  padding-top: 11px;
  padding-bottom: 11px;
  resize: none;
}
.component .wrapper .calendar-button {
  position: absolute;
  top: 0;
  right: 0;
  padding: 6px;
}
.component .wrapper .checkmark-icon {
  position: absolute;
  top: 8px;
  right: 8px;
  color: #25b252;
}