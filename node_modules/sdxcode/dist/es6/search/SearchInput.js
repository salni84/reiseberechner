import * as tslib_1 from "tslib";
import anime from "animejs";
import DomElement from "../DomElement";
import * as Inputs from "../Inputs";
import { searchAndInitialize, preventDefault, internetExplorerOrEdgeVersion } from "../Utils";
import { addClass, removeClass, getAttributeReference, parentWithClass } from "../DomFunctions";
var QUERY_SEARCH_INPUT = "input.search__field";
var QUERY_BTN_CLOSE = ".search__icon-close";
var QUERY_LIVE_SUGESTIONS = ".js-suggestions";
var QUERY_LIVE_FOOTER = ".js-footer";
var CLASS_ACTIVE = "is-active";
var CLASS_OPEN = "is-open";
var CLASS_SEARCH = "search";
var ANIMATION_SUGGESTIONS_DURATION = 300;
var ANIMATION_FOOTER_DURATION = 100;
var ANIMATION_FOOTER_DELAY = ANIMATION_SUGGESTIONS_DURATION - ANIMATION_FOOTER_DURATION;
/**
 * The search input component definition.
 */
var SearchInput = /** @class */ (function (_super) {
    tslib_1.__extends(SearchInput, _super);
    function SearchInput(element) {
        var _this = _super.call(this, element) || this;
        _this._isOpen = false;
        _this._input = _this.element.querySelector(QUERY_SEARCH_INPUT);
        _this._form = _this.element.querySelector("form");
        _this._btnClose = _this.element.querySelector(QUERY_BTN_CLOSE);
        var liveSearch = getAttributeReference(_this.element, "data-live");
        if (liveSearch) {
            _this._liveSuggestions = liveSearch.querySelector(QUERY_LIVE_SUGESTIONS) || undefined;
            _this._liveFooter = liveSearch.querySelector(QUERY_LIVE_FOOTER) || undefined;
            if (_this._liveSuggestions) {
                _this._liveContainer = _this._liveSuggestions.parentNode || undefined;
            }
        }
        _this._focusHandler = _this._handleInputFocus.bind(_this);
        _this._blurHandler = _this._handleInputBlur.bind(_this);
        _this._closeHandler = _this.close.bind(_this);
        _this._windowClickHandler = _this._handleWindowClick.bind(_this);
        _this._keydownHandler = _this._handleKeydown.bind(_this);
        _this._resizeHandler = _this._handleResize.bind(_this);
        _this._initialize();
        return _this;
    }
    SearchInput.prototype._initialize = function () {
        this._input.addEventListener("focus", this._focusHandler);
        this._input.addEventListener("blur", this._blurHandler);
        if (internetExplorerOrEdgeVersion() > 0) {
            // This is a workaround for IE browsers where a focused
            // input's cursor bleeds trough even if hidden
            window.addEventListener("resize", this._resizeHandler);
            window.addEventListener("orientationchange", this._resizeHandler);
        }
        if (this._btnClose) {
            this._btnClose.addEventListener("click", this._closeHandler);
        }
    };
    SearchInput.prototype._handleInputFocus = function () {
        this.addClass(CLASS_ACTIVE);
    };
    SearchInput.prototype._handleInputBlur = function () {
        this.removeClass(CLASS_ACTIVE);
    };
    SearchInput.prototype._handleWindowClick = function (event) {
        var target = event.target;
        if (!parentWithClass(target, CLASS_SEARCH)) {
            this.close();
            return false;
        }
        return true;
    };
    SearchInput.prototype._handleKeydown = function (event) {
        var keycode = event.which || event.keyCode;
        if (keycode === Inputs.KEY_ESCAPE) {
            this.close();
            preventDefault(event);
        }
    };
    SearchInput.prototype._handleResize = function () {
        var style = window.getComputedStyle(this.element);
        if (style.display === "none") {
            this._input.blur();
        }
    };
    SearchInput.prototype._resetMainTimeline = function () {
        if (this.animation) {
            this.animation.pause();
        }
        anime.remove(this._liveSuggestions);
        anime.remove(this._liveFooter);
        this.animation = anime.timeline();
    };
    Object.defineProperty(SearchInput.prototype, "value", {
        /**
         * Gets the search input text content.
         * @returns {String} The input text.
         */
        get: function () {
            return this._input.value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Opens/activates the search input.
     */
    SearchInput.prototype.open = function () {
        var _this = this;
        this.addClass(CLASS_OPEN);
        this._input.focus();
        setTimeout(function () {
            window.addEventListener("click", _this._windowClickHandler);
            window.addEventListener("touchend", _this._windowClickHandler);
            window.addEventListener("keydown", _this._keydownHandler);
        }, 50);
    };
    /**
     * Closes/deactivates the search input.
     */
    SearchInput.prototype.close = function () {
        this._form.reset();
        this.removeClass(CLASS_OPEN);
        this.closeLiveSearch();
        window.removeEventListener("click", this._windowClickHandler);
        window.removeEventListener("touchend", this._windowClickHandler);
        window.removeEventListener("keydown", this._keydownHandler);
    };
    /**
     * Opens the live search suggestions.
     */
    SearchInput.prototype.openLiveSearch = function () {
        var _this = this;
        if (!this._liveSuggestions || this._isOpen) {
            return;
        }
        this._isOpen = true;
        addClass(this._liveContainer, CLASS_OPEN);
        this._resetMainTimeline();
        this._liveSuggestions.style.display = "block";
        this.animation.add({
            targets: this._liveSuggestions,
            duration: ANIMATION_SUGGESTIONS_DURATION,
            height: this._liveSuggestions.scrollHeight + "px",
            easing: "cubicBezier(0.550, 0.085, 0.320, 1)",
            complete: function () {
                var domEl = new DomElement(_this._liveSuggestions);
                domEl.addClass(CLASS_OPEN);
                domEl.setAttribute("style", "");
            }
        });
        if (this._liveFooter) {
            this._liveFooter.style.display = "block";
            this.animation.add({
                targets: this._liveFooter,
                duration: ANIMATION_FOOTER_DURATION,
                height: this._liveFooter.scrollHeight + "px",
                easing: "cubicBezier(0.550, 0.085, 0.320, 1)",
                offset: ANIMATION_FOOTER_DELAY,
                complete: function () {
                    var domEl = new DomElement(_this._liveFooter);
                    domEl.addClass(CLASS_OPEN);
                    domEl.setAttribute("style", "");
                }
            });
        }
    };
    /**
     * Closes the live search suggestions.
     */
    SearchInput.prototype.closeLiveSearch = function () {
        var _this = this;
        if (!this._liveSuggestions || !this.isOpen) {
            return;
        }
        this._isOpen = false;
        this._resetMainTimeline();
        this._liveSuggestions.style.display = "block";
        this.animation.add({
            targets: this._liveSuggestions,
            duration: ANIMATION_SUGGESTIONS_DURATION,
            height: 0,
            easing: "cubicBezier(0.550, 0.085, 0.320, 1)",
            complete: function () {
                var domEl = new DomElement(_this._liveSuggestions);
                domEl.removeClass(CLASS_OPEN);
                domEl.setAttribute("style", "");
                removeClass(_this._liveContainer, CLASS_OPEN);
            }
        });
        if (this._liveFooter) {
            this._liveFooter.style.display = "block";
            this.animation.add({
                targets: this._liveFooter,
                duration: ANIMATION_FOOTER_DURATION,
                height: 0,
                easing: "cubicBezier(0.550, 0.085, 0.320, 1)",
                offset: 0,
                complete: function () {
                    var domEl = new DomElement(_this._liveFooter);
                    domEl.removeClass(CLASS_OPEN);
                    domEl.setAttribute("style", "");
                }
            });
        }
    };
    /**
     * Destroys the component and clears all references.
     */
    SearchInput.prototype.destroy = function () {
        window.removeEventListener("click", this._windowClickHandler);
        window.removeEventListener("touchend", this._windowClickHandler);
        window.removeEventListener("keydown", this._keydownHandler);
        this._input.removeEventListener("focus", this._focusHandler);
        this._input.removeEventListener("blur", this._blurHandler);
        window.removeEventListener("resize", this._resizeHandler);
        window.removeEventListener("orientationchange", this._resizeHandler);
        if (this._btnClose) {
            this._btnClose.removeEventListener("click", this._closeHandler);
        }
        this._input = null;
        this._form = null;
        this._btnClose = null;
        this._focusHandler = null;
        this._blurHandler = null;
        this._closeHandler = null;
        this._windowClickHandler = null;
        this._keydownHandler = null;
        this._liveSuggestions = null;
        this._liveFooter = null;
    };
    /**
     * Determines if the SearchInput is open/visible.
     * @return {Boolean} - True if open; otherwise false.
     */
    SearchInput.prototype.isOpen = function () {
        return this.hasClass(CLASS_OPEN);
    };
    return SearchInput;
}(DomElement));
export function init() {
    searchAndInitialize(".search.search__input", function (e) {
        new SearchInput(e);
    });
}
export default SearchInput;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
