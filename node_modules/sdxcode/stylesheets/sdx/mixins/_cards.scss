//
// Cards Mixins
// --------------------------------------------------

// Card Row Generator
// -------------------------

// Creates a wrapper for a series of columns

@mixin make-card-row($gutter) {
  display: flex;
  flex-wrap: wrap;

  margin-left:  ($gutter / -2);
  margin-right: ($gutter / -2);
}

// Card Columns Generator
// --------------------------------------------------

// Used by the grid system to generate the correct number of grid classes given any value of `$columns`.

@mixin make-card-columns($columns, $gutter) {

  $padding: 0;
  @if ($gutter != null) {
    $padding: ($gutter / 2);
  }

  .col,
  [class*='col-'] {
    position: relative;
    // Prevent columns from becoming too narrow when at smaller grid tiers by
    // always setting `width: 100%;`. This works because we use `flex` values
    // later on to override this initial width.
    width: 100%;
    min-height: 1px; // Prevent collapsing

    // Inner gutter via padding
    padding-left: $padding;
    padding-right: $padding;
  }

  // Provide basic `.col` classes for equal-width flexbox columns
  .col {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }

  @for $i from 1 through $columns {
    .col-#{$i} {
      @include make-col($i, $columns);
    }
  }

  @each $modifier in (pull, push) {
    @for $i from 0 through $columns {
      .#{$modifier}-#{$i} {
        @include make-col-modifier($modifier, $i, $columns)
      }
    }
  }

  // `$columns - 1` because offsetting by the width of an entire row isn't possible
  @for $i from 1 through ($columns - 1) {
    .offset-#{$i} {
      @include make-col-modifier(offset, $i, $columns)
    }
  }
}
